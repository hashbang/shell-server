---
- name: Install nginx
  apt:
    name: 
      - nginx

- name: Setup stream in nginx.conf
  register: nginxconf
  copy:
    dest: /etc/nginx/nginx.conf
    content: |
      user www-data;
      worker_processes auto;
      pid /run/nginx.pid;
      include /etc/nginx/modules-enabled/*.conf;

      events {
              worker_connections 768;
              # multi_accept on;
      }
      
      http {
              ##
              # Basic Settings
              ##

              sendfile on;
              tcp_nopush on;
              tcp_nodelay on;
              keepalive_timeout 65;
              types_hash_max_size 2048;
              # server_tokens off;

              # server_names_hash_bucket_size 64;
              # server_name_in_redirect off;

              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              ##
              # SSL Settings
              ##

              ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
              ssl_prefer_server_ciphers on;

              ##
              # Logging Settings
              ##

              access_log /var/log/nginx/access.log;
              error_log /var/log/nginx/error.log;

              ##
              # Gzip Settings
              ##

              gzip on;

              # gzip_vary on;
              # gzip_proxied any;
              # gzip_comp_level 6;
              # gzip_buffers 16 8k;
              # gzip_http_version 1.1;
              # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

              ##
              # Virtual Host Configs
              ##

              include /etc/nginx/conf.d/*.conf;
              include /etc/nginx/sites-enabled/*;
       }
       
       # Forward :443 to /var/run/nginx/$domain.https.sock
       stream {    
              server {
                  listen      443;
                  proxy_protocol on;
                  proxy_pass  unix:/var/run/nginx/$ssl_preread_server_name.https.sock;
                  ssl_preread on;
              }
        }


- name: Setup sites-enabled/hashbang-http
  register: nginxconf
  copy:
    dest: /etc/nginx/sites-enabled/hashbang-http
    content: |
      # Hashbang server configuration
      # ref: https://gist.github.com/RyanSquared/e59c7e274abef06e63b0e47e46997b00
      #
      map $http_upgrade $connection_upgrade {
        # An empty string indicates the header shouldn't be sent
        # causing the server to assume a keepalive (in HTTP/1.1)
        # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
        default '';
        WebSocket upgrade;
      }

      server {
        listen 80;
        listen [::]:80;
      
        server_name "~^(?<user>[a-zA-Z0-9]+).{{ ansible_fqdn }}$";
      
        location / {
          proxy_pass http://unix:/home/$user/.nginx.sock;
          proxy_http_version 1.1;  # enable for keep-alive http support
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # websocket support
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
        }
      }

      server {
        listen 80;
        listen [::]:80;

        server_name "{{ ansible_fqdn }}";
        
        location /metrics {
          proxy_pass http://localhost:9100/metrics;
        }
      }

- name: Remove default nginx site
  file:
   state: absent
   path: /etc/nginx/sites-enabled/default

- name: create sockets directory
  file:
    path: /var/run/nginx
    state: directory
    mode: '0777'

- name: Restart nginx
  when: nginxconf.changed
  service: name=nginx state=restarted enabled=yes
  ignore_errors: yes  # ignore error when systemd isn't running
